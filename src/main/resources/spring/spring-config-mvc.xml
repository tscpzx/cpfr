<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
		http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context-3.1.xsd  
		http://www.springframework.org/schema/mvc  
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd ">

    <context:annotation-config/>
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="springfox,com.ts.cpfr.controller"/>
    <!-- 开启多种视图支持-->
    <!--<mvc:annotation-driven/>-->

    <!--
     支持AOP的注解支持，AOP底层使用代理技术
     JDK动态代理，要求必须有接口
     cglib代理，生成子类对象，proxy-target-class="true" 默认使用cglib的方式
 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <mvc:annotation-driven>
        <!-- 处理responseBody 里面日期类型,解决返回时间戳的问题 -->
        <mvc:message-converters>
            <bean
                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String"
                                                 value="yyyy-MM-dd HH:mm:ss"/>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 对静态资源文件的访问  restful-->
    <mvc:resources mapping="/resource/**" location="/resource/"/>
    <mvc:resources mapping="/html/**" location="/html/"/>

    <!-- 访问拦截  -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/resource/**"/>
            <mvc:exclude-mapping path="/html/**"/>
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/web"/>
            <mvc:exclude-mapping path="/register"/>
            <mvc:exclude-mapping path="/user/login"/>
            <mvc:exclude-mapping path="/user/nologin"/>
            <mvc:exclude-mapping path="/user/register"/>
            <mvc:exclude-mapping path="/page/**"/>
            <mvc:exclude-mapping path="/app/**"/>
            <mvc:exclude-mapping path="/ws"/>
            <bean class="com.ts.cpfr.spring.WebInterceptor"/>
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/app/**"/>
            <mvc:exclude-mapping path="/app/device_register"/>
            <mvc:exclude-mapping path="/app/current_date"/>
            <mvc:exclude-mapping path="/app/disconnect"/>
            <bean class="com.ts.cpfr.spring.AppInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 定义json视图 -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="parameterName" value="format"/>
        <property name="favorParameter" value="true"/>
        <property name="defaultContentType" value="text/html"/>
        <property name="ignoreAcceptHeader" value="false"/>
    </bean>

    <!-- 定义跳转的文件的前后缀 ，jsp视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/webpage/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="209715200"/>
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
        <property name="resolveLazily" value="true"/>
    </bean>
</beans>